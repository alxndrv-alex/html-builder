/* $type: Defines when to apply the property.
    Values:
    1 - Only for a viewport smaller than a container
    2 - Only for a viewport bigger than a container
    0 - Always
*/

@mixin adaptive-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type==2 {
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  } @else {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin font( $font_name, $file_name, $weight, $style ) {
  @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin media-5 {
  @media screen and (min-width: 500px) {
    @content;
  }
}

@mixin media-6 {
  @media screen and (min-width: 600px) {
    @content;
  }
}

@mixin media-7 {
  @media screen and (min-width: 769px) {
    @content;
  }
}

@mixin media-desktop-view {
  @media screen and (min-width: 1000px) {
    @content;
  }
}

@mixin phone-landscape {
  @media screen and (max-width: 800px) and (orientation:landscape) {
    @content;
  }
}